- name: Deploy images
  hosts: hypervisor
  tags:
    - deploy_aio_image
  tasks:
    - name: Gather variables for each operating system
      include_vars: "{{ item }}"
      with_first_found:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      tags:
        - always
    - name: Install package
      apt:
        name: "{{distro_packages}}"

    - name: Create data pool dir
      file:
        path: "{{global_disk_pool_path}}"
        state: directory

    - name: Create data pool
      virt_pool:
        command: define
        name: "{{global_disk_pool_name}}"
        state: active
        autostart: yes
        xml: '{{ lookup("template", "files/hypervisor/pool.xml.j2") }}'

    - name: Create network
      virt_net:
        command: define
        name: "{{global_ironic_bridge}}"
        state: active
        autostart: yes
        xml: '{{ lookup("template", "files/hypervisor/net.xml.j2") }}'


    - name: Add rules
      iptables:
        action: insert
        rule_num: 3
        chain: FORWARD
        out_interface: "{{item.out_interface}}"
        in_interface: "{{item.in_interface}}"
        source: "{{item.source}}"
        destination: "{{item.destination}}"
        jump: ACCEPT
        comment: "{{item.name}}"
      with_items: "{{iptable_rules}}"

    - name: Create AIO vm
      command: >
        virt-install --vcpus 8 --memory 16384
                     --disk {{global_disk_pool_path}}/openstack-aio-back.qcow2
                     --network bridge=virbr0,model=virtio
                     --network bridge=virbr0_ironic,model=virtio
                     --name opensta-aio  --import --os-type linux --boot hd
